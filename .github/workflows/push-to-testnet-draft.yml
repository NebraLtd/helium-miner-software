name: BalenaCloud Deploy (Testnet - Draft Deploy)

on:
  workflow_dispatch:

jobs:
  testnet:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sbc: [raspi, rockpi, rak, finestra, sensecap, og, controllino, pisces, cotx, pantherx1, linxdot, linxdot-rkcm3, syncrobit, syncrobit-rkcm3, pycom, risinghf]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Export short SHA of current commit
        run: |
          FIRMWARE_SHORT_HASH=$( echo ${GITHUB_SHA:0:7} )
          echo "FIRMWARE_SHORT_HASH=$FIRMWARE_SHORT_HASH" >> $GITHUB_ENV
      - name: Random sleep (balena API workaround)
        run:  sleep $[ ( $RANDOM % 360 ) + 1 ]s
      - name: Generate Docker Compose for RockPi and Non-Nebra ROCK Pi
        if: matrix.sbc == 'rockpi' || matrix.sbc == 'linxdot-rkcm3' || matrix.sbc == 'syncrobit-rkcm3'
        run: |
          python gen_docker_compose.py rockpi -o device-compose-files/docker-compose-rockpi.yml
          cp device-compose-files/docker-compose-rockpi.yml docker-compose.yml
          ROCKPI="-rockpi"
          echo "ROCKPI=$ROCKPI" >> $GITHUB_ENV
      - name: Generate Docker Compose for RaspberryPi & RAK & Other RasPi based vendors
        if: matrix.sbc == 'raspi' || matrix.sbc == 'rak' || matrix.sbc == 'og' || matrix.sbc == 'sensecap' || matrix.sbc == 'finestra' || matrix.sbc == 'controllino' || matrix.sbc == 'cotx' || matrix.sbc == 'pantherx1' || matrix.sbc == 'linxdot' || matrix.sbc == 'syncrobit' || matrix.sbc == 'risinghf'
        run: |
          python gen_docker_compose.py rpi -o device-compose-files/docker-compose-rpi.yml
          cp device-compose-files/docker-compose-rpi.yml docker-compose.yml
      - name: Generate Docker Compose for Pycom
        if: matrix.sbc == 'pycom'
        run: |
          python gen_docker_compose.py pycom -o device-compose-files/docker-compose-pycom.yml
          cp device-compose-files/docker-compose-pycom.yml docker-compose.yml
      - name: Generate Docker Compose for Pisces
        if: matrix.sbc == 'pisces'
        run: |
          python gen_docker_compose.py pisces -o device-compose-files/docker-compose-pisces.yml
          cp device-compose-files/docker-compose-pisces.yml docker-compose.yml
      - name: Balena Deploy (Nebra ROCK Pi)
        uses: nebraltd/balena-cli-action@v15.0.3
        if: matrix.sbc == 'rockpi' && success()
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN}}
          balena_command: "deploy nebraltd/helium-testnet${{ env.ROCKPI }} --debug --nocache --build --draft"
      - name: Balena Deploy (Nebra RasPi)
        uses: nebraltd/balena-cli-action@v15.0.3
        if: matrix.sbc == 'raspi' && success()
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN_1}}
          balena_command: "deploy nebraltd/helium-testnet --debug --nocache --build --draft"
      - name: Balena Deploy (RAK and other non-Nebra RasPi)
        uses: nebraltd/balena-cli-action@v15.0.3
        if: success() && (matrix.sbc == 'rak' || matrix.sbc == 'og' || matrix.sbc == 'sensecap' || matrix.sbc == 'finestra' || matrix.sbc == 'controllino' || matrix.sbc == 'pisces' || matrix.sbc == 'cotx' || matrix.sbc == 'pantherx1' || matrix.sbc == 'linxdot' || matrix.sbc == 'syncrobit' || matrix.sbc == 'pycom' || matrix.sbc == 'risinghf')
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN_2}}
          balena_command: "deploy nebraltd/helium-testnet-${{ matrix.sbc }} --debug --nocache --build --draft"
      - name: Balena Deploy (Non-Nebra ROCK Pi)
        uses: nebraltd/balena-cli-action@v15.0.3
        if: success() && (matrix.sbc == 'linxdot-rkcm3' || matrix.sbc == 'syncrobit-rkcm3')
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN_3}}
          balena_command: "deploy nebraltd/helium-testnet-${{ matrix.sbc }} --debug --nocache --build --draft"
      - name: Push updated docker compose file (ROCK Pi)
        if: (matrix.sbc == 'rockpi' || matrix.sbc == 'linxdot-rkcm3' || matrix.sbc == 'syncrobit-rkcm3') && success()
        uses: test-room-7/action-update-file@v1
        with:
          branch: master
          file-path: device-compose-files/docker-compose-rockpi.yml
          commit-msg: Update ROCK Pi docker compose output
          github-token: ${{ secrets.MR_BUMP }}
      - name: Push updated docker compose file (Nebra RasPi, RAK and other RasPi based vendors)
        if: (matrix.sbc == 'raspi' || matrix.sbc == 'rak' || matrix.sbc == 'og' || matrix.sbc == 'sensecap' || matrix.sbc == 'finestra' || matrix.sbc == 'controllino' || matrix.sbc == 'cotx' || matrix.sbc == 'pantherx1' || matrix.sbc == 'linxdot' || matrix.sbc == 'syncrobit' || matrix.sbc == 'risinghf') && success()
        uses: test-room-7/action-update-file@v1
        with:
          branch: master
          file-path: device-compose-files/docker-compose-rpi.yml
          commit-msg: Update Raspberry Pi docker compose output
          github-token: ${{ secrets.MR_BUMP }}
      - name: Push updated docker compose file (Pycom)
        if: matrix.sbc == 'pycom' && success()
        uses: test-room-7/action-update-file@v1
        with:
          branch: master
          file-path: device-compose-files/docker-compose-pycom.yml
          commit-msg: Update Pycom docker compose output
          github-token: ${{ secrets.MR_BUMP }}
      - name: Push updated docker compose file (Pisces)
        if: matrix.sbc == 'pisces' && success()
        uses: test-room-7/action-update-file@v1
        with:
          branch: master
          file-path: device-compose-files/docker-compose-pisces.yml
          commit-msg: Update Pisces P100 docker compose output
          github-token: ${{ secrets.MR_BUMP }}
